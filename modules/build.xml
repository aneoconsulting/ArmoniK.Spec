<project name="ArmoniKSpecModules" default="test" basedir=".">

	<property name="src" location="src/"/>
	<property name="src-test" location="tests/java"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="lib" location="lib"/>
	<property name="tests" location="tests"/>
	<property name="tlc" location="tlc"/>
    <property name="tla2tools.version" value="1.8.0"/>

	<tstamp>
		<format property="timestamp"
          pattern="yyyyMMdHHmm"
          locale="en,UK"/>
	</tstamp>

	<target name="init" description="Create the build and dist directory structure">
		<mkdir dir="${build}/modules"/>
		<mkdir dir="${build}/tests"/>
		<mkdir dir="${dist}"/>
		<mkdir dir="${tlc}"/>
		<mkdir dir="${lib}"/>
	</target>

	<target name="download" depends="init" description="Downloads tla2tools.jar and CommunityModules-deps.jar" unless="skip.download">
		<get src="https://github.com/tlaplus/tlaplus/releases/download/v${tla2tools.version}/tla2tools.jar" dest="${tlc}"/>
		<get src="https://github.com/tlaplus/CommunityModules/releases/latest/download/CommunityModules-deps.jar" dest="${tlc}"/>
		<get src="https://repo1.maven.org/maven2/org/jgrapht/jgrapht-core/1.5.1/jgrapht-core-1.5.1.jar" dest="${lib}"/>
		<get src="https://repo1.maven.org/maven2/com/google/guava/guava/33.4.8-jre/guava-33.4.8-jre.jar" dest="${lib}"/>
	</target>

	<target name="compile" depends="download" description="compile the java module overwrites">
		<javac srcdir="${src}" destdir="${build}/modules" classpath="${tlc}/tla2tools.jar:${lib}/jgrapht-core-1.5.1.jar:${lib}/guava-33.4.8-jre.jar"
           source="1.8"
           target="1.8"
           deprecation="true"
           includeantruntime="false"/>
	</target>

	<target name="dist" depends="compile" description="Combine the module overwrites and the TLA+ definitions into a distribution">
		<tstamp/>
		<jar jarfile="${dist}/ArmoniKSpecModules-${timestamp}.jar">
			<fileset dir="${build}/modules/"
             includes="**/*.class"/>
			<fileset dir="${src}/"
             includes="*.tla,*.java"/>
			<fileset dir=".."
             includes="LICENSE"/>
		</jar>
		<copy file="${dist}/ArmoniKSpecModules-${timestamp}.jar" tofile="${dist}/ArmoniKSpecModules.jar"/>

		<unzip src="lib/jgrapht-core-1.5.1.jar" dest="${build}/deps">
			<patternset>
				<!-- https://github.com/jgrapht/jgrapht/issues/1112 -->
		        <exclude name="**/*rensenIndexLinkPrediction.class"/>
		        <include name="**/*.class"/>
			</patternset>
		</unzip>

		<unzip src="lib/guava-33.4.8-jre.jar" dest="${build}/deps">
			<patternset>
		        <include name="**/*.class"/>
			</patternset>
		</unzip>

		<jar jarfile="${dist}/ArmoniKSpecModules-deps-${timestamp}.jar">
			<fileset dir="${build}/modules/"
             includes="**/*.class"/>
			<fileset dir="${build}/deps"
             includes="**/*.class"/>
			<fileset dir="${src}/"
             includes="*.tla,*.java"/>
			<fileset dir=".."
             includes="LICENSE"/>
		</jar>
		<copy file="${dist}/ArmoniKSpecModules-deps-${timestamp}.jar" tofile="${dist}/ArmoniKSpecModules-deps.jar"/>
		<copy file="${dist}/ArmoniKSpecModules-deps-${timestamp}.jar" tofile="../tools/ArmoniKSpecModules-deps.jar"/>
	</target>

	<target name="test" depends="dist" description="Run the modules in tests/ on the TLA+ modules in dist/">
		<!-- If an assert fails, TLC will return a non-zero exit value which is makes the ant target fail. -->
		<java classname="tlc2.TLC" fork="true" failonerror="true">
			<!-- Tell Java to use a garbage collector which makes TLC happy. -->
			<jvmarg value="-XX:+UseParallelGC"/>
			<jvmarg value="-Djava.util.logging.config.file=logging.properties"/>
						
			<!-- Report execution statistics as azure-pipelien -->
			<sysproperty key="tlc2.TLC.ide" value="azure-pipeline"/>
			<sysproperty key="util.ExecutionStatisticsCollector.id" value="01ed03e40ba44f278a934849dd2b1038"/>
			
			<arg value="-fp"/>
			<arg value="1"/>
			<arg value="-metadir"/>
			<arg value="${basedir}/build/states"/>
			<arg value="-cleanup"/>
			<arg value="${basedir}/tests/AllTests"/>

			<classpath>
				<pathelement location="${tlc}/tla2tools.jar" />
				<pathelement location="${lib}/jgrapht-core-1.5.1.jar" />
				<pathelement location="${lib}/guava-33.4.8-jre.jar" />
				<pathelement location="${tlc}/CommunityModules-deps.jar" />
				<!-- The jar that has just been built by the dist target. -->
				<pathelement location="${dist}/ArmoniKSpecModules-${timestamp}.jar" />
			</classpath>
		</java>		
	</target>

	<target name="clean" description="Delete the ${build}, ${tlc} and ${dist} directory trees">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
		<delete dir="${tlc}"/>
		<delete dir="${lib}"/>
	</target>
</project>
